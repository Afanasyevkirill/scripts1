"use strict";(self.webpackChunkof_vue=self.webpackChunkof_vue||[]).push([[48824],{148824:function(s,e,t){t.d(e,{A:function(){return y}});var i=t(693514),r=function s(){var e=this,t=e._self._c;return e.isAuth||e.promotion||!e.user.canAddSubscriber?e.isAuthUser||!e.user.subscribedBy&&!e.user.isPendingAutoprolong?e.isAuthUser&&e.promotion?t("div",{directives:[{name:"touch-hover",rawName:"v-touch-hover"}],class:{"m-rounded m-border m-uppercase":!e.flat&&!e.chat&&!e.newEdition,"m-rounded m-uppercase m-block":!e.flat&&!e.chat&&e.newEdition,"m-lg":e.smSize?!e.smSize:!e.short,"m-flat m-reset-width m-no-uppercase m-default-font-weight":e.flat,"g-btn":!e.chat},attrs:{role:"button",tabindex:"0"}},[t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribePromoText},expression:"{ text: subscribePromoText }"}],staticClass:"b-wrap-btn-text",class:{"m-notice":!e.promotion.hasRelatedPromo}})]):!e.isAuthUser&&e.user.canAddSubscriber&&e.isCustom?t("div",{attrs:{role:"button",tabindex:"0"},on:{click:function(s){return s.preventDefault(),e.clickCustomButton.apply(null,arguments)}}},[e._t("content")],2):!e.isAuthUser&&e.user.canAddSubscriber&&e.promotion?t("div",{directives:[{name:"touch-hover",rawName:"v-touch-hover"}],class:{"m-rounded m-flex m-space-between":!e.flat&&!e.chat&&!e.newEdition,"m-rounded m-uppercase m-block":!e.flat&&!e.chat&&e.newEdition,"m-lg":e.smSize?!e.smSize:!e.short,"m-flat m-reset-width m-no-uppercase m-default-font-weight":e.flat,"g-btn":!e.chat},attrs:{role:"button",tabindex:"0"},on:{click:e.openSubscribeModal}},[!e.isAuth||!e.short||e.chat||e.newEdition||e.isRestricted?e._e():t("svg",{directives:[{name:"svg-sprite",rawName:"v-svg-sprite:icon-follow",arg:"icon-follow"}]}),t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribePromoText},expression:"{ text: subscribePromoText }"}],staticClass:"b-wrap-btn-text",class:{"m-notice":!e.promotion.hasRelatedPromo&&!e.short}})]):e.isAuthUser||!e.user.canAddSubscriber||e.promotion?e._e():t("div",{directives:[{name:"touch-hover",rawName:"v-touch-hover"}],class:{"m-rounded m-flex m-space-between":!e.flat&&!e.newEdition,"m-rounded m-uppercase m-block":!e.flat&&e.newEdition,"m-lg":e.smSize?!e.smSize:!e.short,"m-flat m-reset-width m-no-uppercase m-default-font-weight":e.flat,"g-btn":!e.chat},attrs:{role:"button",tabindex:"0"},on:{click:function(s){return s.preventDefault(),e.openSubscribeModal.apply(null,arguments)}}},[e.isAuth&&e.short&&!e.isRestricted?t("svg",{directives:[{name:"svg-sprite",rawName:"v-svg-sprite:icon-follow",arg:"icon-follow"}]}):e._e(),t("div",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribeBtnLabel},expression:"{ text: subscribeBtnLabel }"}],staticClass:"b-wrap-btn-text"})]):t("div",{directives:[{name:"touch-hover",rawName:"v-touch-hover"}],class:{"m-rounded m-flex m-space-between":!e.flat&&!e.chat&&!e.newEdition,"m-rounded m-uppercase m-block":!e.flat&&!e.chat&&e.newEdition,"m-border":!e.flat&&!e.chat&&!e.newEdition&&(!e.waitForExpire||e.user.isSuspended||e.user.isFrozen||e.user.isPendingAutoprolong&&!e.isNewPriceHigherAgreePrice),"m-lg":e.smSize?!e.smSize:!e.short,"m-flat m-reset-width m-no-uppercase m-default-font-weight":e.flat,"g-btn":!e.chat},attrs:{role:"button","at-attr":"subscribe_btn",tabindex:"0"},on:{click:function(s){return s.preventDefault(),e.openUnsubscribeModal.apply(null,arguments)}}},[e.user.isSuspended||e.user.isFrozen||e.user.subscribedBy&&!e.user.canAddSubscriber||e.waitForExpire||e.user.isPendingAutoprolong?t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribeText},expression:"{ text: subscribeText }"}],staticClass:"b-wrap-btn-text"}):e.isFree?[e.labelPersonalTrial?t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.labelPersonalTrial},expression:"{ text: labelPersonalTrial }"}],staticClass:"b-wrap-btn-text"}):e.labelPromoFreeTrial?t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.labelPromoFreeTrial},expression:"{ text: labelPromoFreeTrial }"}],staticClass:"b-wrap-btn-text"}):[t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.$t("message.subscribed_btn")},expression:"{ text: $t('message.subscribed_btn') }"}],staticClass:"b-btn-text"}),t("span",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.$t("message.for_free_btn")},expression:"{ text: $t('message.for_free_btn') }"}],staticClass:"b-btn-text"})]]:t("div",{directives:[{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribeTextNoTime},expression:"{ text: subscribeTextNoTime }"}],staticClass:"b-wrap-btn-text"})],2):t("div",{directives:[{name:"touch-hover",rawName:"v-touch-hover"},{name:"safe-html",rawName:"v-safe-html",value:{text:e.subscribeBtnLabel},expression:"{ text: subscribeBtnLabel }"}],staticClass:"m-fluid-width",class:{"m-rounded m-flex m-space-between":!e.flat&&!e.chat,"m-lg":e.smSize?!e.smSize:!e.short,"m-flat m-reset-width m-no-uppercase m-default-font-weight":e.flat,"g-btn":!e.chat},attrs:{role:"button",tabindex:"0"},on:{click:function(s){return s.preventDefault(),e.openSubscribeModal.apply(null,arguments)}}})},n=[],a=t(858156),o=t.n(a),b=t(218111),c=t(720116),u=t(725440),h=t(974353),l=t.n(h),m=t(202600),d=t(110908),p=t(547822),f=t(910881),_=t(579244),$=t(191646),w=t(758987),x=t(456908),g,P={name:"SubscribeBtn",mixins:[f.A,$.wd,_.A,$.tD,$.$g],props:{flat:{type:Boolean,required:!1},chat:{type:Object,default:null},short:{type:Boolean,required:!1},newEdition:{type:Boolean,required:!1},isCustom:{type:Boolean,default:!1},isRestricted:{type:Boolean,default:!1},smSize:{type:Boolean,default:!1},label:{type:String,default:""}},setup(){const{EVENTS:s,$emit:e}=(0,p.A)(),t=undefined;return{showConfirmSubscriptionRenewPopup:t=>{e(s.CONFIRM_SUBSCRIPTION_RENEW_POPUP.INIT,t)}}},computed:{...(0,d.npG)(["isAuth","authUserId","authUser"]),...(0,d.why)(["subscriptionInitiated"]),promotionAll(){return o()(this,"user.promotions",[]).find((s=>"all"===s.type))},promotionExpired(){return o()(this,"user.promotions",[]).find((s=>"expired"===s.type))},promotion(){return this.isAuthUser?"SubscribersByType"===this.$route.name&&"expired"===this.$route.params.type?this.promotionExpired:this.promotionAll:this.isAuth&&this.isExpired?this.promotionExpired&&this.promotionExpired.canClaim?this.promotionExpired:null:this.promotionAll&&this.promotionAll.canClaim?this.promotionAll:null},hasRelatedPromo(){return 1===o()(this,"user.promotions",[]).length},daysInCurrentMonth(){const s=new Date;return new Date(s.getFullYear(),s.getMonth()+1,0).getDate()},subscribeBtnPrice(){return null!==this.user.currentSubscribePrice&&void 0!==this.user.currentSubscribePrice?this.user.currentSubscribePrice:(!this.isExpiredNow||this.user.isPendingAutoprolong)&&this.subscribe&&Number.isFinite(this.subscribe.price)?this.subscribe.price:this.user.subscribePrice},formattedSubscribeBtnPrice(){return this.formatPrice(this.subscribeBtnPrice)},subscribeBtnLabel(){return this.label?this.label:this.isRestricted?`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`:this.short?this.$t("message.subscription_subscribe_free_simple_button"):this.subscribeBtnPrice?`<span class="b-btn-text">${this.$t("message.subscribe_btn")}</span>\n          <span class="b-btn-text__small">${this.$t("message.price_per_month",{PRICE:this.formattedSubscribeBtnPrice})}</span>`:`<span class="b-btn-text">${this.$t("message.subscribe_btn")}</span>\n        <span class="b-btn-text">${this.$t("message.for_free_btn")}</span>`},isAuthUser(){return this.authUserId===this.id},expiredDateHuman(){return this.subscribe?l()(this.subscribe.expiredAt).format("MMM D, YYYY"):this.user.subscribedByExpireDate?l()(this.user.subscribedByExpireDate).format("MMM D, YYYY"):""},subscribeText(){if(this.label)return this.label;if(this.isRestricted)return`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`;if(this.user&&(this.user.isSuspended||this.user.isFrozen||this.user.subscribedBy&&!this.user.canAddSubscriber||this.user.isPendingAutoprolong&&!this.isNewPriceHigherAgreePrice)){const s=undefined,e=undefined;return`${`<span class="b-btn-text">${this.$t("message.subscribed_btn")}</span>`}${this.subscribeBtnPrice?`<span class="b-btn-text__small">${this.$t("message.price_per_month",{PRICE:this.formattedSubscribeBtnPrice})}</span>`:`<span class="b-btn-text">${this.$t("message.for_free_btn")}</span>`}`}if(this.isFromPaidToFree){const s=undefined,e=undefined;return`${`<span class="b-btn-text">${this.$t("message.renew_btn")}</span>`}${`<span class="b-btn-text">${this.$t("message.for_free_btn")}</span>`}`}if(this.hasAnyPaidSubscription){const s=undefined,e=undefined;return`${`<span class="b-btn-text">${this.$t("message.renew_btn")}</span>`}${this.subscribe&&this.subscribe.subscribePrice?`<span class="b-btn-text__small">\n              ${this.$t("message.price_per_month",{PRICE:this.formatPrice(this.subscribe.subscribePrice)})}\n            </span>`:`<span class="b-btn-text">${this.$t("message.for_free_btn")}</span>`}`}return this.subscribe&&this.subscribe.subscribePrice?`<span class="b-btn-text">\n            ${this.$t("message.renew_btn")}\n          </span>\n          <span class="b-btn-text__small">\n            ${this.$t("message.price_per_month",{PRICE:this.formatPrice(this.subscribe.subscribePrice)})}\n          </span>`:`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text">\n            ${this.$t("message.for_free_btn")}\n          </span>`},subscribeTextNoTime(){return this.label?this.label:this.isRestricted?`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`:this.subscribedByPromo?`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text__small">\n            ${this.$t("message.user_card_price_for_count_days",{PRICE:this.formatPrice(this.subscribedByPromo.price),COUNT:this.subscribedByPromo.duration})}\n          </span>`:this.subscribedByBundle?`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text__small">\n            ${this.$t("message.user_card_price_total",{PRICE:this.formatPrice(this.subscribedByBundle.price)})}\n          </span>`:this.subscribe&&this.subscribe.price?`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text__small">\n            ${this.$t("message.price_per_month",{PRICE:this.formatPrice(this.subscribe.price)})}\n          </span>`:this.$t("message.subscribe_btn_unsubscribe_label_wait_for_expire_for_free_no_time")},subscribePromoText(){return this.label?this.label:this.isRestricted?`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`:this.promotion?this.short?this.$t("message.subscription_subscribe_free_simple_button"):parseFloat(this.promotion.price)?`<span class="b-btn-text">\n                  ${this.$t("message.subscribe_btn")}\n                </span>\n                <span class="b-btn-text__small">\n                  ${this.$t("message.user_card_price_for_count_days",{PRICE:this.priceHuman(this.promotion.price),COUNT:this.promotion.subscribeDays||this.daysInCurrentMonth})}\n                </span>`:`<span class="b-btn-text">\n                ${this.$t("message.subscribe_btn")}\n              </span>\n              <span class="b-btn-text__small">\n                <span class="g-text-uppercase">${this.$t("message.free")}</span>\n                <span class="g-btn__new-line-text">\n                  ${this.$t("message.user_card_price_for_count_days",{PRICE:"",COUNT:this.promotion.subscribeDays})}\n                </span>\n              </span>`:""},isFree(){return!!this.subscribe&&!this.subscribe.price},lastPostDate(){return this.subscribe&&this.subscribe.lastPostDate?l()(this.subscribe.lastPostDate).format("MMM D, YYYY"):""},labelPersonalTrial(){return this.label?this.label:this.isRestricted?`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`:this.subscribedByPersonalTrial?`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text">\n            ${this.$t("message.free")}\n            <span class="b-btn-text__small">\n              ${this.$t("message.user_card_price_for_count_days",{PRICE:"",COUNT:this.subscribedByPersonalTrial.duration})}\n            </span>\n          </span>`:""},labelPromoFreeTrial(){return this.label?this.label:this.isRestricted?`<span class="b-btn-text__center">\n          ${this.$t("message.restricted_subscribe_button")}\n        </span>`:this.subscribedByPromo&&(this.subscribedByPromo.price<=0||100===this.subscribedByPromo.disccount)?`<span class="b-btn-text">\n            ${this.$t("message.subscribed_btn")}\n          </span>\n          <span class="b-btn-text">\n            ${this.$t("message.free")}\n            <span class="b-btn-text__small">\n              ${this.$t("message.user_card_price_for_count_days",{PRICE:"",COUNT:this.subscribedByPromo.duration})}\n            </span>\n          </span>`:""},needConfirm(){return!this.isAuthUser&&this.user.canAddSubscriber&&!this.isExpired&&this.isNewPriceHigherAgreePrice}},mounted(){if(!this.subscriptionInitiated&&(-1!==window.location.hash.indexOf("#subscribeModal")&&(this.isAuthUser||this.user.subscribedBy||this.openSubscribeModal()),"Profile"===this.$route.name&&this.isAuth&&this.subscribe)){const{agree_price:s,enable_renew:e,token:t}=this.$route.query;t||(this.needConfirm&&s&&+s==+this.user.subscribePrice&&(this.agreePriceConfirmShow(),this.$router.replace({...this.$route,query:{...this.$route.query,agree_price:void 0}})),e&&(this.$router.replace({...this.$route,query:{...this.$route.query,enable_renew:void 0}}),this.isAuthUser||(this.isExpiredNow?this.openSubscribeModal():this.waitForExpire&&this.showConfirmSubscriptionRenewPopup({userId:this.id}))))}},methods:{...(0,d.tSh)(["setModalUser","setPreLoginSubscriptionData"]),...(0,d.CXg)(["fetchSubscriptionsCount"]),...(0,d.ZDR)(["updateSubscribe"]),...(0,d.bKs)(["fetchChat"]),...(0,d.peC)(["setSubscriptionInitiated"]),...(0,d.cw3)(["updateLiveUser"]),async suspendedSubscribeConfirmShow(){const s=undefined;await window.interact(this.$t("message.subscribe_suspended_confirm_popup",{LAST_POST_DATE:this.lastPostDate}))&&this.openSubscribeModal()},async agreePriceConfirmShow(){const s=undefined;await window.interact(`<p>${this.$t("message.renewal_confirmation_desc",{NAME:this.user.name,AMOUNT:`<strong>${this.amountHumanShort(this.user.subscribePrice)}</strong>`})}</p>\n        <ul class="gray-list">\n          <li>${this.$t("message.renewal_info_desc_1",{PRICE:this.amountHumanShort(this.user.subscribePrice)})}</li>\n          <li>${this.$t("message.renewal_info_desc_2")}</li>\n          <li>${this.$t("message.renewal_info_desc_3")}</li>\n        </ul>`)&&this.confirmPrice({place:"email"})},async subscribeFinish(s){this.$root.$emit("subscribe::user::beforeFinish"),null!=s&&s.id&&(this.updateSubscribe(s),await this.fetchSubscriptionsCount(),"Profile"===this.$route.name||"ProfileInner"===this.$route.name||"Post"===this.$route.name?await this.fetchProfileData(this.id):"Chat"===this.$route.name?(await this.fetchChat(this.id),this.$route.params.chatId&&this.$root.$emit("message::from::draft",this.$route.params.chatId),this.$emit("hide-dropdown")):"SubscribesByType"===this.$route.name?this.removeSubscribe(this.id):"Live"===this.$route.name&&(this.updateLiveUser(s),this.$root.$emit("bv::hide::modal","ModalSubscribeLite")),this.$root.$emit("subscribe::user::finish"))},async openSubscribeModal(){var s;if(!this.isAuthUser)if(await this.setModalUser({userId:this.id}),this.isAuth)if(this.user.subscribePrice)this.$nextTick((()=>{!1===this.isExpiredNow?this.doResubscribe():this.$root.$emit("bv::show::modal","ModalSubscribe")}));else if(!this.user.isPaywallRequired||null!==(s=this.authUser)&&void 0!==s&&s.isPaywallPassed)try{window.showPreloader(),this.setSubscriptionInitiated(!0);const s=(0,x.W)(this.$route.name),e=await(0,m.B1)(this.id,{source:s});this.setSubscriptionInitiated(!1),await this.subscribeFinish(e),window.hidePreloader()}catch(e){window.hidePreloader(),(0,w.r_)(e)}else this.$nextTick((()=>{this.$root.$emit("bv::show::modal","ModalSubscribe")}));else this.setPreLoginSubscriptionData({name:"subscription"}),this.$nextTick((()=>{this.$root.$emit("bv::show::modal","ModalSubscribe")}))},async openUnsubscribeModal(){const{id:s}=this;if(this.user.isPendingAutoprolong)return this.isNewPriceHigherAgreePrice?void this.showConfirmSubscriptionRenewPopup({userId:s}):(await this.setModalUser({userId:s}),void this.$nextTick((()=>{this.$root.$emit("bv::show::modal","ModalUnsubscribe")})));!this.user.canAddSubscriber||this.user.isSuspended||this.user.isFrozen?this.isExpiredNow?this.suspendedSubscribeConfirmShow():(await this.setModalUser({userId:s}),this.$nextTick((()=>{this.$root.$emit("bv::show::modal","ModalUnsubscribe")}))):this.waitForExpire?this.showConfirmSubscriptionRenewPopup({userId:s}):(await this.setModalUser({userId:s}),this.$nextTick((()=>{this.$root.$emit("bv::show::modal","ModalUnsubscribe")})))},async doResubscribe(){if(await window.interact(this.$t("message.dialog_resubscribe_desc_new",{AMOUNT:`<strong>${this.amountHumanShort(this.user.subscribePrice)}</strong>`,DATE:`<strong>${this.expiredDateHuman}</strong>`}),{confirmText:this.$t("message.yes")}))try{const s=(0,x.W)(this.$route.name),e=await(0,m.Ir)(this.id,{source:s});this.subscribeFinish(e)}catch(s){(0,w.r_)(s)}},clickCustomButton(s){s.target!==s.currentTarget&&this.openSubscribeModal()}}},v,S,y=(0,t(281656).A)(P,r,n,!1,null,null,null).exports},456908:function(s,e,t){t.d(e,{W:function(){return i}});const i=s=>{if("string"!=typeof s)return null;switch(s){case"Subscribers":case"SubscribersByType":return"fans";default:return s?s.toLowerCase():null}}}}]);